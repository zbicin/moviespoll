@model Poll.Models.PollViewModel
<div class="row">
    <div class="col-md-6 col-md-offset-3">

        @using (Html.BeginForm("Poll", "Home", null, FormMethod.Post, new { @class = "form", role = "form" }))
        {
            <div class="alert alert-info">
                <p>
                    We would like you to vote the following movies. There is @Model.Votes.Count of them, but it shouldn't take too long.
                </p>
                <p>
                    For your convenience, we can automatically proceed to the next movie after voting so you don't have to scroll at all.
                    You can always scroll back to change your vote.
                </p>
                <label>
                    <input type="checkbox" id="autoscroll" checked /> Sounds great, do the scrolling for me.
                </label>
            </div>
            <div class="form-group">
                <label>First, let us know what is your name (required):</label>
                @Html.EditorFor(x => x.PersonName, null, new {htmlAttributes = new {@class = "form-control", style = "margin: auto"}})
                <div>@Html.ValidationMessageFor(x => x.PersonName, "", new { @class = "text-danger" })</div>
                <label>then, let's start voting:</label>
            </div>

            <hr/>

            for (var i = 0; i < Model.Votes.Count; i++)
            {
                <div class="form-group">
                    <label>
                        <a target="_blank" href="https://www.themoviedb.org/movie/@(Model.Votes[i].MovieTMBID)?language=en">
                            @Model.Votes[i].MovieTitle
                            <i class="glyphicon glyphicon-new-window"></i>
                        </a>
                    </label>
                    <div style="margin-bottom: 20px;">
                        <i class="glyphicon glyphicon-remove"></i>
                        <div class="btn-group btn-group-lg">
                            @for (var j = 1; j < 6; j++)
                            {
                                <a href="#" data-val="@j" class="btn btn-default btn-radio @(Model.Votes[i].Grade.HasValue && Model.Votes[i].Grade == j ? "active" : "")">
                                    &nbsp;&nbsp;@j&nbsp;&nbsp;
                                </a>
                            }
                        </div>
                        <i class="glyphicon glyphicon-heart"></i>
                        @Html.HiddenFor(x => Model.Votes[i].Grade, new { @class = "hookGrade" })
                        @Html.HiddenFor(x => Model.Votes[i].MovieId)
                        @Html.HiddenFor(x => Model.Votes[i].MovieTitle)
                    </div>

                    <a href="#" class="btn btn-default btn-radio @(!Model.Votes[i].Grade.HasValue ? "active" : "")">I haven't seen it</a>
                </div>
                <hr />
            }

            <button type="submit" class="btn btn-success btn-lg">Submit</button>
        }

    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('body').on('click', '.btn-radio', function (e) {
                e.preventDefault();
                var group = $(this).closest('.form-group');
                $('.btn-radio', group).removeClass('active');
                $(this).addClass('active');
                $('.hookGrade', group).val($(this).data('val') || null);
                $('html, body').animate({
                    'scrollTop': group.next().next().offset().top
                });
            });
        });
    </script>
}